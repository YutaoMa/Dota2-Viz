# Import essential libraries
library(httr)
library(jsonlite)
library(dplyr)
library(shiny)
# Import essential libraries
library(httr)
library(jsonlite)
library(dplyr)
library(shiny)
# Source the api.key file to read the api key
source('./api.key.R')
# Get all bestseller list names using list.names endpoint
list.names.url <- 'https://api.nytimes.com/svc/books/v3/lists/names.json'
list.names.query.params <- list(api_key = book.key)
list.names.response <- GET(list.names.url, query = list.names.query.params)
list.names.body <- content(list.names.response, "text")
list.names.results <- fromJSON(list.names.body)$results
list.names.display <- list.names.results %>% select(display_name)
list.names.encoded <- list.names.results %>% select(list_name_encoded)
# Might be useful for creating the select box, yet didn't use
# list.num <- c(1 : nrow(list.names.results))
# Use the selected list name to update the calendar widget
list.selected <- list.names.results %>% filter(list.names.encoded == list.names.select)
list.start <- list.selected[, 'oldest_published_date']
list.end <- list.selected[, 'newest_published_date']
# Get each week or month between them
if(list.names.results[, 'updated'] == "WEEKLY") {
list.dates <- seq(as.Date(input$list.dates.range[1]), as.Date(input$list.dates.range[2]), by = "week")
} else if(list.names.results[, 'updated' == "MONTHLY"]) {
list.dates <- seq(as.Date(input$list.dates.range[1]), as.Date(input$list.dates.range[2]), by = "month")
}
# Pass that into overview
UserCombinedInfo <- function(time.period) {
OneDateInfo <- function (date) {
base.url <-"https://api.nytimes.com/svc/books/v3/lists/overview.json"
query.params <-list("api-key"= book.key, "published_date"=date)
response <- GET(base.url, query = query.params)
body <-content (response, "text")
results <-as.data.frame(fromJSON(body))
UsefulInfo <- by(results,1:nrow(results),function(row){
each <-as.data.frame(row$results.lists.books)
return(each)
})
all.useful <-do.call(rbind,UsefulInfo)
}
combined.df <-lapply(time.period,OneDateInfo)
combined.df <-as.data.frame(do.call(rbind,combined.df))
combined.df <-unique(combined.df) %>%
select(title, weeks_on_list, buy_links)
row.names(combined.df) <-NULL
return(combined.df)
}
all.lists <- UserCombinedInfo(list.dates)
library(httr)
library(jsonlite)
library(dplyr)
library(shiny)
# Source the api.key file to read the api key
source('./api.key.R')
# Get all bestseller list names using list.names endpoint
list.names.url <- 'https://api.nytimes.com/svc/books/v3/lists/names.json'
list.names.query.params <- list(api_key = book.key)
list.names.response <- GET(list.names.url, query = list.names.query.params)
list.names.body <- content(list.names.response, "text")
list.names.results <- fromJSON(list.names.body)$results
list.names.display <- list.names.results %>% select(display_name)
list.names.encoded <- list.names.results %>% select(list_name_encoded)
source('./api.key.R'
